name: Python Tests

on: [push, pull_request]

jobs:
  init:
    name: Initializing workflow
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.init.outputs.matrix }}
      repo: ${{ steps.init.outputs.repo }}
    steps:
      - name: Clone repository
        uses: actions/checkout@v3

      - name: Initialize workflow
        id: init
        env:
          BASE64_MATRIX: ${{ secrets.BASE64_MATRIX }}
          BASE64_REPO: ${{ secrets.BASE64_REPO }}
        run: |
          tests/bin/init-workflow.sh

  # docs/development/Building_PKI.md
  build:
    name: Building PKI
    needs: init
    runs-on: ubuntu-latest
    container: registry.fedoraproject.org/fedora:${{ matrix.os }}
    env:
      COPR_REPO: "@pki/10.10"
    strategy:
      matrix: ${{ fromJSON(needs.init.outputs.matrix) }}
    steps:
      - name: Install git
        run: dnf install -y git

      - name: Clone repository
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          dnf install -y dnf-plugins-core rpm-build
          dnf copr enable -y $COPR_REPO
          dnf builddep -y --allowerasing --spec ./pki.spec --nogpgcheck

      - name: Build PKI packages
        run: ./build.sh --with-pkgs=base,server,tests --with-timestamp --with-commit-id --work-dir=build rpm

      - name: Upload PKI packages
        uses: actions/upload-artifact@v2
        with:
          name: pki-build-${{ matrix.os }}
          path: build/RPMS/

  pylint-test:
    name: pylint
    needs: [init, build]
    runs-on: ubuntu-latest
    env:
      COPR_REPO: "@pki/10.10"
    container: registry.fedoraproject.org/fedora:${{ matrix.os }}
    strategy:
      matrix: ${{ fromJSON(needs.init.outputs.matrix) }}
    steps:
      - name: Download PKI packages
        uses: actions/download-artifact@v2
        with:
          name: pki-build-${{ matrix.os }}
          path: build/RPMS

      - name: Update container
        run: |
          dnf install -y python3-pylint python3-flake8 python3-pyflakes findutils dnf-plugins-core
          dnf copr enable -y ${COPR_REPO}

      - name: Install PKI packages
        run: dnf -y localinstall build/RPMS/*

      - name: Run python lint
        run: |
          /usr/share/pki/tests/bin/pki-lint \
            --rcfile=/usr/share/pki/tests/pylintrc \
            --config=/usr/share/pki/tests/tox.ini -v
